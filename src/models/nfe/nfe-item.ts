import z from 'zod'
import { IntSchema, NumberSchema } from '../../types/number-type'
import { CofinsSchema } from '../cofins'
import { CombustivelSchema } from '../combustivel'
import {
  ICMS00Schema,
  ICMS02Schema,
  ICMS101Schema,
  ICMS102Schema,
  ICMS103Schema,
  ICMS10Schema,
  ICMS15Schema,
  ICMS201Schema,
  ICMS202Schema,
  ICMS203Schema,
  ICMS20Schema,
  ICMS300Schema,
  ICMS30Schema,
  ICMS400Schema,
  ICMS40Schema,
  ICMS41Schema,
  ICMS500Schema,
  ICMS50Schema,
  ICMS51Schema,
  ICMS53Schema,
  ICMS60Schema,
  ICMS61Schema,
  ICMS70Schema,
  ICMS900Schema,
  ICMS90Schema,
} from '../icms'
import { PisSchema } from '../pis'

export const NfeItemSchema = z.object({
  controleItem: IntSchema,
  codigo: z.string(),
  codigoBarras: z.string().optional().default('SEM GTIN'),
  descricao: z.string(),
  ncm: z.string().optional().nullable(),
  cest: z.string().optional().nullable(),
  cfop: z.string(),
  valorBruto: NumberSchema,
  tributos: z.object({
    icms: z.discriminatedUnion('cst', [
      ICMS00Schema,
      ICMS02Schema,
      ICMS101Schema,
      ICMS102Schema,
      ICMS103Schema,
      ICMS10Schema,
      ICMS15Schema,
      ICMS201Schema,
      ICMS202Schema,
      ICMS203Schema,
      ICMS20Schema,
      ICMS300Schema,
      ICMS30Schema,
      ICMS400Schema,
      ICMS40Schema,
      ICMS41Schema,
      ICMS500Schema,
      ICMS50Schema,
      ICMS51Schema,
      ICMS53Schema,
      ICMS60Schema,
      ICMS61Schema,
      ICMS70Schema,
      ICMS900Schema,
      ICMS90Schema,
    ]),
    pis: PisSchema,
    cofins: CofinsSchema,
    valorAproximadoTributos: NumberSchema,
  }),
  compoeTotal: z.boolean(),
  codigoBeneficioFiscal: z.string().optional().nullable(),
  exTipi: z.string().optional().nullable(),
  valorFrete: NumberSchema,
  valorSeguro: NumberSchema,
  valorDesconto: NumberSchema,
  valorOutros: NumberSchema,
  unidade: z.object({ comercial: z.string(), tributavel: z.string() }),
  quantidade: z.object({
    comercial: NumberSchema,
    tributavel: NumberSchema,
  }),
  valorUnitario: z.object({
    comercial: NumberSchema,
    tributavel: NumberSchema,
  }),
  informacoesComplementares: z.string().optional().nullable(),
  combustivel: CombustivelSchema.optional().nullable(),
})

export type NfeItem = z.infer<typeof NfeItemSchema>
